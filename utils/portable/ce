#!/bin/sh

log_file='.code_evolve_log'
branch_name='code_evolve'

function need_help {
    echo
    echo "code evolve -- present following code versions using git."
    echo "USAGE: ce init|first|previous|next|last"
    echo "  * init -> use current commit as final version. Create new branch"
    echo "    ending on this commit and move to oldest commit. Then you can"
    echo "    navigate using commands:"
    echo "  * first"
    echo "  * last"
    echo "  * previous"
    echo "  * next"
    exit 1
}

function test_branch {
    git status &> /dev/null
    if [[ "$?" != "0" ]]; then
        echo "ce: works only in git managed directory."
        exit 1
    fi

    git branch | grep "* $1" &> /dev/null
}

function init {
    git log --oneline > $log_file
}

function next {
    if [[ ! -e $log_file ]]; then
        echo "ce: no log file($log_file) found"
        exit 1
    fi

    current_hash=$(git rev-parse --short HEAD)
    current_version=$(grep -n -m1 $current_hash $log_file | cut -d: -f1 )
    if [[ "$?" != 0 ]]; then
        echo "ce: HEAD is not in log file."
        exit 1;
    fi
    ((current_version--))
    if [[ $current_version -le 0 ]]; then
        echo "ce: already at the end of evolution. Have a nice day!"
        exit 1
    fi

    next_hash=$(head -$current_version $log_file | tail -1 | cut -d' ' -f1)
    git checkout $next_hash
}

if [[ "$#" != 1 ]]; then
    need_help
fi

case $1 in
  "init") init;;
  "previous") echo "unimplemented";;
  "next") next;;
  "first") echo "unimplemented";;
  "last") echo "unimplemented";;
  *) need_help
esac
